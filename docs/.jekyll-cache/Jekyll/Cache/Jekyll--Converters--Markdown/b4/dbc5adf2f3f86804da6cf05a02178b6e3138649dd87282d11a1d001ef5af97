I"Ú<h1 class="no_toc" id="customization">Customization</h1>

<h2 class="no_toc text-delta" id="table-of-contents">Table of contents</h2>

<ol id="markdown-toc">
  <li><a href="#color-schemes" id="markdown-toc-color-schemes">Color schemes</a></li>
  <li><a href="#specific-visual-customization" id="markdown-toc-specific-visual-customization">Specific visual customization</a></li>
  <li><a href="#override-styles" id="markdown-toc-override-styles">Override styles</a></li>
</ol>

<hr />

<h2 class="d-inline-block" id="color-schemes">Color schemes</h2>

<p class="label label-green">New</p>

<p>Just the Docs supports two color schemes: light (default), and dark.</p>

<p>To enable a color scheme, set the <code class="highlighter-rouge">color_scheme</code> parameter in your siteâ€™s <code class="highlighter-rouge">_config.yml</code> file:</p>

<h4 class="no_toc" id="example">Example</h4>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Color scheme currently only supports "dark" or nil (default)</span>
<span class="na">color_scheme</span><span class="pi">:</span> <span class="s2">"</span><span class="s">dark"</span>
</code></pre></div></div>
<p><button class="btn js-toggle-dark-mode">Preview dark color scheme</button></p>

<script type="text/javascript" src="http://localhost:4000/microgrid-dapp/assets/js/dark-mode-preview.js"></script>

<h2 id="specific-visual-customization">Specific visual customization</h2>

<p>To customize your siteâ€™s aesthetic, open <code class="highlighter-rouge">_sass/custom/custom.scss</code> in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value.</p>

<p>For example, to change the link color from the purple default to blue, open <code class="highlighter-rouge">_sass/custom/custom.css</code> and find the <code class="highlighter-rouge">$link-color</code> variable on line <code class="highlighter-rouge">50</code>. Uncomment it, and change its value to our <code class="highlighter-rouge">$blue-000</code> variable, or another shade of your choosing.</p>

<h4 class="no_toc" id="example-1">Example</h4>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ...</span>
<span class="c1">//</span>
<span class="c1">// $body-text-color: $grey-dk-100;</span>
<span class="c1">// $body-heading-color: $grey-dk-300;</span>
<span class="nv">$link-color</span><span class="p">:</span> <span class="nv">$blue-000</span><span class="p">;</span>
<span class="c1">//</span>
<span class="c1">// ...</span>
</code></pre></div></div>

<p><em>Note:</em> Editing the variables directly in <code class="highlighter-rouge">_sass/support/variables.scss</code> is not recommended and can cause other dependencies to fail.</p>

<h2 id="override-styles">Override styles</h2>

<p>For styles that arenâ€™t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit <code class="highlighter-rouge">_sass/overrides.scss</code>. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied.</p>

<p>For example, if youâ€™d like to add your own styles for printing a page, you could add the following styles.</p>

<h4 class="no_toc" id="example-2">Example</h4>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Print-only styles.</span>
<span class="k">@media</span> <span class="n">print</span> <span class="p">{</span>
  <span class="nc">.side-bar</span><span class="o">,</span> <span class="nc">.page-header</span> <span class="p">{</span> <span class="nl">display</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span> <span class="p">}</span>
  <span class="nc">.main-content</span> <span class="p">{</span> <span class="nl">max-width</span><span class="p">:</span> <span class="nb">auto</span><span class="p">;</span> <span class="nl">margin</span><span class="p">:</span> <span class="m">1em</span><span class="p">;}</span>
<span class="p">}</span>
</code></pre></div></div>
:ET